@{
    ViewBag.Title = "Chat";
}
<style type="text/css">
    .container {
        max-width: 700px;
        margin: auto;
    }
    .inbox_msg {
        border: 1px solid #c4c4c4;
        clear: both;
        overflow: hidden;
    }
    .received_msg {
        display: inline-block;
        padding: 0 0 0 10px;
        vertical-align: top;
        width: 45%;
    }

    .received_withd_msg p {
        background: #ebebeb none repeat scroll 0 0;
        border-radius: 3px;
        color: #646464;
        font-size: 14px;
        margin: 0;
        overflow: auto;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .msg_info {
        color: #747474;
        display: block;
        font-size: 12px;
        margin: 8px 0 0;
    }

    .received_withd_msg {
        min-width: 45%;
        word-wrap: break-word;
    }

    .mesgs {
        float: left;
        padding: 30px 15px 0 25px;
        width: 100%;
    }

    .sent_msg p {
        background: #05728f none repeat scroll 0 0;
        border-radius: 3px;
        font-size: 14px;
        margin: 0;
        color: #fff;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .msg {
        overflow: hidden;
        margin: 26px 0 26px;
    }

    .sent_msg {
        float: right;
        min-width: 45%;
        word-wrap: break-word;
        max-width: 80%;
    }

    .input_msg_write input {
        background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
        border: medium none;
        color: #4c4c4c;
        font-size: 15px;
        min-height: 48px;
        padding: 10px;
        min-width: 100%;
    }

    .type_msg {
        border-top: 1px solid #c4c4c4;
        position: relative;
        padding-bottom: 5px;
    }

    .msg_send_btn {
        background: #05728f none repeat scroll 0 0;
        border: medium none;
        border-radius: 50%;
        color: #fff;
        cursor: pointer;
        font-size: 17px;
        height: 33px;
        position: absolute;
        right: 7px;
        top: 7px;
        width: 33px;
    }

    .msg_history {
        height: 400px;
        overflow-y: auto;
    }
</style>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" type="text/css" rel="stylesheet" />

<br/>
<input type="hidden" id="displayname" />
<div class="inbox_msg">
    <div class="mesgs">
        <div class="msg_history" id="discussion">
        </div>

        <div class="type_msg">
            <div class="input_msg_write">
                <input type="text" id="message" class="write_msg" placeholder="Type a message" />
                <button class="msg_send_btn" type="button" id="sendmessage" value="Send"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Execute a function when the user releases a key on the keyboard
            var input = document.getElementById("message");

            input.addEventListener("keyup", function (event) {
                // Cancel the default action, if needed
                event.preventDefault();
                // Number 13 is the "Enter" key on the keyboard
                if (event.keyCode === 13) {
                    // Trigger the button element with a click
                    document.getElementById("sendmessage").click();
                }
            });


            function gotoBottom(id) {
                var element = document.getElementById(id);
                element.scrollTop = element.scrollHeight - element.clientHeight;
            }
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message, datetime) {
                if ($('#displayname').val() === name) {
                    $('#discussion').append('<div class="msg"><div class="sent_msg"><p>' + message + '</p><span class="msg_info">' + datetime + ' | ' + name + '</span> </div></div>');
                }
                else {
                    $('#discussion').append('<div class="msg"><div class="received_msg"><div class="received_withd_msg"><p>' + message + '</p><span class="msg_info">' + datetime + ' | ' + name + '</span></div></div></div>');
                }
                gotoBottom('discussion');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
    </script>
}
